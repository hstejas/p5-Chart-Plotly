package {$package_name};
use Moose;
use MooseX::ExtraArgs;

{$used_modules}

# VERSION

=encoding utf-8

=head1 NAME 

{$package_name}

=head1 SYNOPSIS

# EXAMPLE: examples/traces/{$trace_name}.pl

=head1 DESCRIPTION

{$description}

This file has been autogenerated from the official plotly.js source.

If you like Plotly, please support them: L<https://plot.ly/> 
Open source announcement: L<https://plot.ly/javascript/open-source-announcement/>

Full reference: L<https://plot.ly/javascript/reference/#{$trace_name}>

=head1 DISCLAIMER

This is an unofficial Plotly Perl module. Currently I'm not affiliated in any way with Plotly. 
But I think plotly.js is a great library and I want to use it with perl.

=head1 METHODS

=cut

=head2 TO_JSON

Serialize the trace to JSON. This method should be called only by L<JSON> serializer.

=cut

sub TO_JSON \{
    my $self = shift; 
    my $extra_args = $self->extra_args // \{\};
    my %hash = (%$self, %$extra_args); 
    delete $hash\{'extra_args'\};
    if ($self->can('type') && (!defined $hash\{'type'\})) \{
        $hash\{type\} = $self->type();
    \}
    return \%hash;
\}

{$type_method}

=head1 ATTRIBUTES

=over

=cut
